#!/usr/bin/env python3

from ciscoconfparse import CiscoConfParse

# todo: remove bfd, source-interface commands

# uncomment to test directly
# config_full = "PDXL-3850-01.cfg"
# config_gns = "PDXL-3850-01-test.cfg"

def create_gns_config(config_full, config_gns):
    with open(config_gns, 'w') as f:
        f.write("! GENERATED BY B-TOWN\n\n")

    with open(config_gns, 'a') as f:
            parse = CiscoConfParse(config_full)
            hostname = parse.find_lines("^hostname", exactmatch=False)
            for x in hostname:
                x = x
                f.write(x)
            f.write("\n!\n")
            rtr_txt = parse.find_all_children("interface Loopback", exactmatch=False)
            for x in rtr_txt:
                x = x + "\n"
                f.write(x)
            f.write("!\n")
            rtr_txt = parse.find_all_children("^router", exactmatch=False)
            for x in rtr_txt:
                if "bfd" not in x:
                    print(x)
                    x = x + "\n"
                    f.write(x)
            print("all done with router")
            map_txt = parse.find_all_children("^route-map", exactmatch=False)
            for x in map_txt:
                x = x + "\n"
                f.write(x)
            f.write("!\n")
            pfx_list = parse.find_lines("^ip prefix-list", exactmatch=False)
            for x in pfx_list:
                x = x + "\n"
                f.write(x)
            f.write("!\n")


    # delete stuff not supported or needed
'''
    parse = CiscoConfParse(config_gns)
    for obj in parse.find_objects("^interface"):
        obj.delete_children_matching(r'bfd')
    for obj in parse.find_objects("^router"):
        print(obj)
        obj.delete_children_matching(r'bfd')
    for line in parse.ioscfg:
        print(line)
'''
# uncomment this to test module directly
# create_gns_config(config_full, config_gns)
